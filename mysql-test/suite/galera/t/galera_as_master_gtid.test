#
# Test Galera as a master to a MySQL slave with GTID
#
# The galera/galera_2node_master.cnf describes the setup of the nodes
#
# We check that all transactions originating from within Galera use a UUID that is 
# different from the server_uuid of either node
#
#

--source include/have_innodb.inc
--source include/have_log_bin.inc
--source include/galera_cluster.inc
--source include/force_restart.inc

--connection node_1
SET SESSION wsrep_on = OFF;
RESET MASTER;
SET SESSION wsrep_on = ON;

--connection node_2
SET SESSION wsrep_on = OFF;
RESET MASTER;
SET SESSION wsrep_on = ON;

--connect node_3, 127.0.0.1, root, , test, $NODE_MYPORT_3
RESET MASTER;
--disable_query_log
--eval CHANGE MASTER TO  MASTER_HOST='127.0.0.1', MASTER_PORT=$NODE_MYPORT_1;
--enable_query_log
START SLAVE USER='root';

--connection node_1
CREATE TABLE t1 (f1 INTEGER PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES(1);

--let $effective_uuid = `SELECT LEFT(@@global.gtid_executed, 36)`
--disable_query_log
--eval SELECT '$effective_uuid' != @@global.server_uuid AS uuids_do_not_match;
--enable_query_log

--replace_result $effective_uuid <effective_uuid>
--replace_regex /table_id: [0-9]+/table_id: #/ /xid=[0-9]+/xid=#/
SHOW BINLOG EVENTS IN 'mysqld-bin.000001' FROM 123;

--connection node_2
INSERT INTO t1 VALUES(2);

--disable_query_log
--eval SELECT '$effective_uuid' != @@global.server_uuid AS uuids_do_not_match;
--eval SELECT '$effective_uuid' = LEFT(@@global.gtid_executed, 36) AS uuids_match;
--enable_query_log

--replace_result $effective_uuid <effective_uuid>
--replace_regex /table_id: [0-9]+/table_id: #/ /xid=[0-9]+/xid=#/
SHOW BINLOG EVENTS IN 'mysqld-bin.000001' FROM 123;

--connection node_3
--let $wait_condition = SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 't1';
--source include/wait_condition.inc

--let $wait_condition = SELECT COUNT(*) = 2 FROM t1;
--source include/wait_condition.inc

--disable_query_log
--eval SELECT '$effective_uuid' != @@global.server_uuid AS uuids_do_not_match;
--eval SELECT '$effective_uuid' = LEFT(@@global.gtid_executed, 36) AS uuids_match;
--enable_query_log

--replace_result $effective_uuid <effective_uuid>
--replace_regex /table_id: [0-9]+/table_id: #/ /xid=[0-9]+/xid=#/
SHOW BINLOG EVENTS IN 'mysqld-bin.000001' FROM 123;


#
# Test that when the session has disabled binlog, it does not advance gtid_executed
#
--connection node_2
SET SESSION sql_log_bin=0;

--let $gtid_executed_before = `SELECT @@global.gtid_executed`
INSERT INTO t1 VALUES (10);
--let $gtid_executed_after = `SELECT @@global.gtid_executed`

# confirm gtid_executed hasn't changed
--let $assert_text = 'gitd_executed should not change'
--let $assert_cond = "$gtid_executed_before" = "$gtid_executed_after"
--source include/assert.inc

# restart PXC node and confirm that gitd_purged is empty
--source include/shutdown_mysqld.inc
--let $restart_parameters = "restart"
--source include/start_mysqld.inc

--let $gtid_purged = `SELECT @@global.gtid_purged`
--let $assert_text = 'gtid_purged should be empty'
--let $assert_cond = '$gtid_purged' = ''
--source include/assert.inc

--connection node_3
# confirm it was not replicated
--sleep 5
--let $assert_text = 'INSERT should not be replicated'
--let $assert_cond = [SELECT COUNT(*) as count FROM t1 WHERE f1 = 10, count, 1] = 0
--source include/assert.inc

#cleanup
--connection node_1
DROP TABLE t1;

--connection node_3
--let $wait_condition = SELECT COUNT(*) = 0 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 't1';
--source include/wait_condition.inc
STOP SLAVE;
RESET SLAVE ALL;
