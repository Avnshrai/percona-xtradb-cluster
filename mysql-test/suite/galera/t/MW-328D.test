#
# MW-328 Fix unnecessary/silent BF aborts
#

# The scenario is as below
#
#    1. trx1 gets an S-lock granted
#    2. trx2 wants an X-lock, but has to wait for trx1
#    3. trx1 now wants an X-lock, but the starvation-prevention mechanism
#    forces it to wait for trx2
#
# In versions prior to 8.0.29, the above lead to a cycle in the waits-for graph
# resulting in a deadlock.
#
# In 8.0.29 lock priority was changed by commit 7037a0bd so that the
# transaction holding s-lock can now upgrade to x-lock even when there are
# x-waiters.
#
# This test verifies the new behavior is kept as-is even when galera is loaded.

--source include/galera_cluster.inc
--source include/count_sessions.inc

CREATE TABLE t1 (i INT) ENGINE = InnoDB;
INSERT INTO t1 (i) VALUES(1);

CREATE TABLE t2 (i INT) ENGINE = InnoDB;

# Trx-1 acquires S-lock
--connection node_1
START TRANSACTION;
SELECT * FROM t1 WHERE i = 1 LOCK IN SHARE MODE;

# Trx-2 tries to acquire X lock but waits
--connect node_1a, 127.0.0.1, root, , test, $NODE_MYPORT_1
--connection node_1a
START TRANSACTION;
--send INSERT IGNORE INTO t2 SELECT * FROM t1 WHERE i = 1 FOR UPDATE;

# Trx-1 tries to upgrade to X lock. This should be successful.
--connection node_1
DELETE FROM t1 WHERE i = 1;
COMMIT;

--connection node_1a
--error 0
--reap
--disconnect node_1a

--connection node_1
DROP TABLE t1, t2;
--source include/wait_until_count_sessions.inc
