# PXC-3760: Implement a feature to evict a lagging node from PXC
#
# Problem:
# We want to evict a node if it slows down a whole cluster due to the flow control.
#
# Solution:
# We introduce two variables: gcs.fc_auto_evict_window and gcs.fc_auto_evict_threshold.
# If the node pauses in FC more than "threshold * window" in the last "window" seconds
# frame, node will just abort.
#
# It's just a smoke test of the feature, because it's problematic to achieve required
# time characteristics. For more granular testing a unit test is used.

--source include/force_restart.inc
--source include/galera_cluster.inc

--connection node_2
--source include/expect_crash.inc
# Triggering flow control logic taken from here:
# https://www.percona.com/blog/monitoring-flow-control-percona-xtradb-cluster-5-6/
SET GLOBAL wsrep_provider_options="gcs.fc_limit=1;gcs.fc_auto_evict_window=0.01";
FLUSH TABLES WITH READ LOCK;

--connection node_1
CREATE TABLE t1(a INT PRIMARY KEY AUTO_INCREMENT, b INT);
--echo Filling the table with data
--disable_query_log
INSERT INTO t1 (b) VALUES(10);
--let $i=11
while ($i) {
  INSERT INTO t1 (b) SELECT b FROM t1;
  --dec $i
}
--enable_query_log

--connection node_2
UNLOCK TABLES;

--connection node_1
--let $wait_condition=SELECT VARIABLE_VALUE = 1 FROM performance_schema.global_status WHERE VARIABLE_NAME = 'wsrep_cluster_size'
--source include/wait_condition.inc

--let $assert_text= FÐ¡ auto eviction triggered
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.2.err
--let $assert_select= Triggering automatic eviction of the node since flow control pause limit exceeded
--let $assert_count= 1
--source include/assert_grep.inc

# Cleanup.
# It doesn't need to restore wsrep_provider_options because node 2 restarts.
--connection node_2
--echo Starting node 2 after shutdown...
--source include/start_mysqld.inc
--source include/galera_wait_ready.inc

--connection node_1
DROP TABLE t1;
