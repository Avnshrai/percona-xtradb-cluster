#
# Test if replicated events which add rows to mysql.password_history table does not cause PK collision in this table.
# The timestamp of the event is the part of PK. If replicated events miss usec part of the timestamp and they occur
# on the same second, they will cause PK collision.
# This test executes queries in bursts, so at least part of the burst should happen in the same second causing the collision.
#
 
--source include/galera_cluster.inc

--echo This test does not produce the output. It tries to trigger node crash after PK collision in mysql.password_history table.
--disable_query_log

--let $count = 100
# As the user exists it will produce series of 'Note	3163	Authorization ID 'test1'@'%' already exists.'. Disable it.
--disable_warnings
while ($count) {
  --let $passwd = 'password_$count'
  --eval CREATE USER IF NOT EXISTS 'test1'@'%' IDENTIFIED WITH 'mysql_native_password' BY $passwd PASSWORD HISTORY 10
  --dec $count
}
--enable_warnings

--let $count = 100
while ($count) {
  --let $passwd = 'password_$count'
  --eval ALTER USER 'test1'@'%' IDENTIFIED WITH 'mysql_native_password' BY $passwd PASSWORD HISTORY 10
  --dec $count
}

--let $count = 100
while ($count) {
  --let $passwd = 'password_$count'
  --eval SET PASSWORD for 'test1'@'%' = $passwd
  --dec $count
}

# check if mysql.password_history table was really used
--let $assert_text = 'node_1: There should be 10 rows in mysql.password_history table.'
--let $assert_cond = [SELECT COUNT(*) = 10 FROM mysql.password_history] = 1
--source include/assert.inc

--connection node_2
# check if mysql.password_history table was really used
--let $assert_text = 'node_2: There should be 10 rows in mysql.password_history table.'
--let $assert_cond = [SELECT COUNT(*) = 10 FROM mysql.password_history] = 1
--source include/assert.inc

# All nodes should have the same password history
# galera_diff.inc disables and re-enables query log internally.
# Just to keep things clear enable now, then disable again after galera_diff.inc
--enable_query_log
--let $galera_diff_statement = SELECT * FROM mysql.password_history ORDER BY Password_timestamp;
--source include/galera_diff.inc
--disable_query_log

DROP USER 'test1'@'%';
--enable_query_log
